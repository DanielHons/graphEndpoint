buildscript {
    repositories {
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'http://repo.spring.io/libs-release' }
        maven { url "https://mvnrepository.com/artifact/org.neo4j/neo4j-ogm-core" }
        maven { url 'https://mvnrepository.com/artifact/org.springframework.data/spring-data-neo4j'}
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    }
}




plugins {

    id 'org.springframework.boot' version '1.5.2.RELEASE'
}
apply plugin: 'java'

group 'FirstSteps'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}









ext {
    HelloMessage = 'myCustomPropertyValue'
    ContextConfig = '/conf.xml'
    neo4jVersion ='2.1.2'
}



dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    compile("org.springframework.boot:spring-boot-starter-web")
    //quite cool stuff, like /health ;)
    compile("org.springframework.boot:spring-boot-starter-actuator")


    //Neo4j
    compile("org.springframework.boot:spring-boot-starter-data-neo4j")
    testCompile group: 'org.neo4j', name: 'neo4j-kernel', version: '3.1.0-RC1' //Mabye should be compile

    compile group: 'org.neo4j', name: 'neo4j-ogm-core', version: neo4jVersion
    runtime group: 'org.neo4j', name: 'neo4j-ogm-bolt-driver', version:  neo4jVersion
    testCompile group: 'org.neo4j', name: 'neo4j-ogm-embedded-driver', version: neo4jVersion


    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'junit', name: 'junit', version: '4.12'


    /*BELOW JUST TESTING */

    //compile group: 'org.neo4j', name: 'neo4j-graphdb-api', version: '3.1.0-RC1'
    testCompile group: 'org.neo4j', name: 'neo4j-lucene-index', version: '3.1.0-RC1'  //Mabye should be compile
}




jar {
    from configurations.runtime
    manifest {
        attributes(
                'Main-Class': 'MainApp',
                'Implementation-Version': version,
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}